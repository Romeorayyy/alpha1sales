src/
    products.js
import product1 from "./assets/products1/1.png";
import product2 from "./assets/products1/2.jpg";
import product3 from "./assets/products1/3.png";
import product4 from "./assets/products1/4.png";
import product5 from "./assets/products1/5.png";
import product6 from "./assets/products1/6.webp";
import product7 from "./assets/products1/7.webp";
import product8 from "./assets/products1/8.webp";

export const PRODUCTS = [
  {
    id: 1,
    productName: "randy",
    price: 45.0,
    productImage: product1,
    description: "this is the description for product 1"
  },
  {
    id: 2,
    productName: "Vape 2",
    price: 45.0,
    productImage: product2,
    description: "this is the description for product 2"
  },
  {
    id: 3,
    productName: "Vape 3",
    price: 45.0,
    productImage: product3,
    description: "this is the description for product 3"
  },
  {
    id: 4,
    productName: "Vape 4",
    price: 45.0,
    productImage: product4,
    description: "this is the description for product 4"
  },
  {
    id: 5,
    productName: "Vape 5",
    price: 45.00,
    productImage: product5,
    description: "this is the description for product 5"
  },
  {
    id: 6,
    productName: "Vape 6",
    price: 45.0,
    productImage: product6,
    description: "this is the description for product 6"
  },
  {
    id: 7,
    productName: "Vape 7",
    price: 45.0,
    productImage: product7,
    description: "this is the description for product 7"
  },
  {
    id: 8,
    productName: "Vape 8",
    price: 45.0,
    productImage: product8,
    description: "this is the description for product 8"
  },
];


    index.js
import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App";

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


    App.js
import "./App.css";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import { Navbar } from "./components/navbar";
import { Shop } from "./pages/shop/shop";
import { Contact } from "./pages/contact";
import Cart from "./pages/cart/cart";
import ProductPage from "./pages/product/ProductPage";
import { ShopContextProvider } from "./context/shop-context";

function App() {
  return (
    <div className="App">
      <ShopContextProvider>
        <Router>
          <Navbar />
          <Routes>
            <Route path="/" element={<Shop />} />
            <Route path="/contact" element={<Contact />} />
            <Route path="/cart" element={<Cart />} />
            <Route path="/product/:id" element={<ProductPage />} />
          </Routes>
        </Router>
      </ShopContextProvider>
    </div>
  );
}

export default App;


    context/
        shop-context.jsx
import { createContext, useEffect, useState } from "react";
import { PRODUCTS } from "../products";

export const ShopContext = createContext(null);

const getDefaultCart = () => {
  let cart = {};
  for (let i = 1; i < PRODUCTS.length + 1; i++) {
    cart[i] = 0;
  }
  return cart;
};

export const ShopContextProvider = (props) => {
  const [cartItems, setCartItems] = useState(getDefaultCart());

  const getTotalCartAmount = () => {
    let totalAmount = 0;
    for (const item in cartItems) {
      if (cartItems[item] > 0) {
        let itemInfo = PRODUCTS.find((product) => product.id === Number(item));
        totalAmount += cartItems[item] * itemInfo.price;
      }
    }
    return totalAmount;
  };

  const addToCart = (itemId) => {
    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));
  };

  const removeFromCart = (itemId) => {
    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));
  };

  const updateCartItemCount = (newAmount, itemId) => {
    setCartItems((prev) => ({ ...prev, [itemId]: newAmount }));
  };

  const checkout = () => {
    setCartItems(getDefaultCart());
  };

  const contextValue = {
    cartItems,
    addToCart,
    updateCartItemCount,
    removeFromCart,
    getTotalCartAmount,
    checkout,
  };

  return (
    <ShopContext.Provider value={contextValue}>
      {props.children}
    </ShopContext.Provider>
  );
};


    components/
        navbar.jsx
import React from "react";
import { Link } from "react-router-dom";
import { ShoppingCart } from "phosphor-react";
import "./navbar.css";

export const Navbar = () => {
  return (
    <div className="navbar">
      <div className="links">
        <Link to="/"> Shop </Link>
        <Link to="/contact"> Contact </Link>
        <Link to="/cart">
          <ShoppingCart size={32} />
        </Link>
      </div>
    </div>
  );
};


    assets/
        products/
        products1/
    pages/
        contact.jsx
import React from "react";

export const Contact = () => {
  return <div>contact</div>;
};


        checkoutform/
            CheckoutForm.jsx
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import "./CheckoutForm.css";
import Cart from '../cart/cart';


const CheckoutForm = () => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");
  
  const navigate = useNavigate();

  const handleSubmit = (e) => {
    e.preventDefault();
    // Handle form submission logic here

    // Navigate to a confirmation or thank you page after submission
    navigate("/confirmation");
  };

  return (
    <div className="checkout-form">
      <Cart />
      <h1>Checkout</h1>
      <form onSubmit={handleSubmit}>
        <label htmlFor="name">Name:</label>
        <input
          type="text"
          id="name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          required
        />
        <label htmlFor="email">Email:</label>
        <input
          type="email"
          id="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <label htmlFor="phone-number">Phone number:</label>
        <input
          type="tel"
          id="phone-number"
          value={phoneNumber}
          onChange={(e) => setPhoneNumber(e.target.value)}
          required
        />
        <button type="submit">Submit</button>
      </form>
    </div>
  );
};

export default CheckoutForm;


        shop/
            product.jsx
import React, { useContext } from "react";
import { Link } from "react-router-dom";
import { ShopContext } from "../../context/shop-context";

export const Product = (props) => {
  const { id, productName, price, productImage } = props.data;
  const { addToCart, cartItems } = useContext(ShopContext);

  const cartItemCount = cartItems[id];

  return (
    <div className="product">
      <Link to={`/product/${id}`}>
        <img src={productImage} />
        <div className="description">
          <p>
            <b>{productName}</b>
          </p>
          <p> ${price}</p>
        </div>
      </Link>
      <button className="addToCartBttn" onClick={() => addToCart(id)}>
        Add To Cart {cartItemCount > 0 && <> ({cartItemCount})</>}
      </button>
    </div>
  );
};


            shop.jsx
import React from "react";
import { PRODUCTS } from "../../products";
import { Product } from "./product";
import "./shop.css";

export const Shop = () => {
  return (
    <div className="shop">
      <div className="shopTitle">
        <h1>Alpha1Sales</h1>
      </div>

      <div className="products">
        {PRODUCTS.map((product) => (
          <Product key={product.id} data={product} />
        ))}
      </div>
    </div>
  );
};


        product/
            ProductPage.jsx
import React, { useContext } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { ShopContext } from "../../context/shop-context";
import { PRODUCTS } from "../../products";
import styles from "./ProductPage.module.css";

const ProductPage = () => {
  const { id } = useParams();
  const product = PRODUCTS.find((p) => p.id === Number(id));
  const navigate = useNavigate();
  const { cartItems, addToCart, updateCartItemCount, removeFromCart } = useContext(ShopContext);
  const cartItemCount = cartItems[id];

  if (!product) return <h2>Product not found.</h2>;

  const handleBuyNowClick = () => {
    if (cartItemCount === 0) addToCart(Number(id));
    navigate("/cart");
  };

  return (
    <div className={styles.productPage}>
      <div className={styles.productCard}>
        <img src={product.productImage} alt={product.name} />
        <h3>{product.productName}</h3>
        <p>{product.description}</p>
        <p>Price: ${product.price.toFixed(2)}</p>
        <div className={styles.quantityControl}>
          <button onClick={() => removeFromCart(product.id)}>-</button>
          <input
            type="number"
            value={cartItems[product.id]}
            onChange={(e) => updateCartItemCount(parseInt(e.target.value), product.id)}
          />
          <button onClick={() => addToCart(product.id)}>+</button>
        </div>
        <div>
          <button className={styles.addToCartBttn} onClick={() => addToCart(Number(id))}>
            Add To Cart {cartItemCount > 0 && <> ({cartItemCount})</>}
          </button>
          <button className={styles.addToCartBttn} onClick={handleBuyNowClick}>
            Buy Now
          </button>
        </div>
      </div>
    </div>
  );
};

export default ProductPage;


        cart/
            cart-item.jsx
import React, { useContext } from "react";
import { ShopContext } from "../../context/shop-context";

export const CartItem = (props) => {
  const { id, productName, price, productImage } = props.data;
  const { cartItems, addToCart, removeFromCart, updateCartItemCount } =
    useContext(ShopContext);

  return (
    <div className="cartItem">
      <img src={productImage} />
      <div className="description">
        <p>
          <b>{productName}</b>
        </p>
        <p> Price: ${price}</p>
        <div className="countHandler">
          <button onClick={() => removeFromCart(id)}> - </button>
          <input
            value={cartItems[id]}
            onChange={(e) => updateCartItemCount(Number(e.target.value), id)}
          />
          <button onClick={() => addToCart(id)}> + </button>
        </div>
      </div>
    </div>
  );
};


            cart.jsx
import React, { useContext } from 'react';
import { ShopContext } from '../../context/shop-context';
import { CartItem } from './cart-item';
import { PRODUCTS } from "../../products";
import './cart.css';

const Cart = () => {
  const { cartItems, removeFromCart, clearCart } = useContext(ShopContext);
  const productsInCart = PRODUCTS.filter((product) => cartItems[product.id] > 0);

  const handleSubmit = async (event) => {
    event.preventDefault();

    const formData = new FormData(event.target);
    const name = formData.get('name');
    const lastName = formData.get('lastName');
    const phoneNumber = formData.get('phoneNumber');

    const emailData = {
      name,
      lastName,
      phoneNumber,
      cartItems,
    };

    try {
      const response = await fetch('/api/send-email', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(emailData),
      });

      if (!response.ok) {
        throw new Error('Something went wrong');
      }

      clearCart();
      alert('Email sent successfully');
    } catch (error) {
      console.error(error);
      alert('Error sending email');
    }
  };

  return (
    <div className="cart-container">
      {/* Add this block to render CartItem components */}
      {productsInCart.map((product) => (
        <CartItem key={product.id} data={product} />
      ))}
      <form onSubmit={handleSubmit}>
        <input type="text" name="name" placeholder="First Name" required />
        <input type="text" name="lastName" placeholder="Last Name" required />
        <input type="text" name="phoneNumber" placeholder="Phone Number" required />
        <button type="submit">Submit</button>
      </form>
      {/* ... */}
    </div>
  );
};

export default Cart;


